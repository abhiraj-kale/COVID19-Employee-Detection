ALTER TABLE SYMPTOMS
ADD PERCENTAGE VARCHAR(10);
ALTER TABLE ZONE_SELECT
ADD PERCENTAGE VARCHAR(10);

DELIMITER //  
CREATE OR REPLACE FUNCTION update_symp ( ID INT )  
RETURNS BOOL  
BEGIN  
   DECLARE tem DECIMAL(6,3);  
   DECLARE P_COUGH, P_BREATH, P_NOSE, P_PREG, P_FOREIGN, per VARCHAR(20);

  SELECT TEMP
  INTO  tem
  FROM SYMPTOMS WHERE USER_ID=ID;

  SELECT COUGH
  INTO  P_COUGH
  FROM SYMPTOMS WHERE USER_ID=ID;

  SELECT SHORT_BREATH
  INTO  P_BREATH
  FROM SYMPTOMS WHERE USER_ID=ID;

  SELECT RUNNING_NOSE
  INTO  P_NOSE
  FROM SYMPTOMS WHERE USER_ID=ID;

  SELECT PREG
  INTO  P_PREG
  FROM SYMPTOMS WHERE USER_ID=ID;

  SELECT FOREIGN_TRP
  INTO  P_FOREIGN
  FROM SYMPTOMS WHERE USER_ID=ID;

    IF tem<99 THEN
  UPDATE SYMPTOMS
  SET percentage='0'
  where TEMP=tem AND USER_ID=ID;

   ELSEIF tem>99 AND tem<102 THEN
  UPDATE SYMPTOMS
  SET percentage='20'
  where TEMP=tem AND USER_ID=ID;

   ELSEIF tem>102 THEN
  UPDATE SYMPTOMS
  SET percentage='40'
  where TEMP=tem AND USER_ID=ID;
  END IF;

  IF P_COUGH='Y' OR P_NOSE='Y' OR P_BREATH='Y' THEN
  UPDATE SYMPTOMS
  SET PERCENTAGE = (PERCENTAGE + 20) 
  WHERE COUGH = P_COUGH AND SHORT_BREATH = P_BREATH AND  RUNNING_NOSE = P_NOSE AND USER_ID=ID;
  END IF;

  IF (P_COUGH='Y' AND P_BREATH='Y' ) OR (P_COUGH='Y' AND P_NOSE='Y') OR (P_BREATH='Y' AND P_NOSE='Y')  
  THEN
  UPDATE SYMPTOMS
  SET PERCENTAGE = (PERCENTAGE + 20) 
  WHERE COUGH = P_COUGH AND SHORT_BREATH = P_BREATH AND  RUNNING_NOSE = P_NOSE AND USER_ID=ID;
  END IF;

  IF (P_COUGH='Y' AND P_BREATH='Y' AND P_NOSE='Y') OR (P_COUGH='Y' AND P_NOSE='Y' AND P_BREATH='Y') OR 
  (P_BREATH='Y' AND P_NOSE='Y' AND P_COUGH='Y')  
  THEN
  UPDATE SYMPTOMS
  SET PERCENTAGE = (PERCENTAGE + 20) 
  WHERE COUGH = P_COUGH AND SHORT_BREATH = P_BREATH AND  RUNNING_NOSE = P_NOSE AND USER_ID=ID;
  END IF;

  IF (P_FOREIGN = 'Y')  
  THEN
  UPDATE SYMPTOMS
  SET PERCENTAGE = (PERCENTAGE + 10) 
  WHERE FOREIGN_TRP=P_FOREIGN AND USER_ID=ID;
  END IF;

  IF (P_PREG = 'Y')  
  THEN
  UPDATE SYMPTOMS
  SET PERCENTAGE = (PERCENTAGE + 10) 
  WHERE PREG=P_PREG AND USER_ID=ID;
  END IF;

  SELECT percentage
  INTO per
  FROM SYMPTOMS WHERE USER_ID=ID;

  IF per>100
  THEN 
  UPDATE SYMPTOMS
  SET PERCENTAGE = 100
  WHERE USER_ID=ID;
  END IF;

  RETURN TRUE;
END; //  
DELIMITER ; 

DELIMITER &&  
CREATE PROCEDURE SET_ZONES ()  
BEGIN  
    UPDATE ZONE_SELECT
    SET PERCENTAGE = (
    SELECT PERCENTAGE
    FROM SYMPTOMS
    WHERE SYMPTOMS.`USER_ID` = ZONE_SELECT.`USER_ID`
    );
    update ZONE_SELECT
    SET ZONE= 'G'
    WHERE PERCENTAGE<20;
    
    update ZONE_SELECT
    SET ZONE= 'Y'
    WHERE PERCENTAGE>=20 AND PERCENTAGE<40; 

    update ZONE_SELECT
    SET ZONE= 'R'
    WHERE PERCENTAGE>=40;  
END &&  
DELIMITER ;  

DELIMITER // 
CREATE OR REPLACE TRIGGER UPDATE_ALL
AFTER INSERT ON SYMPTOMS
FOR EACH ROW
BEGIN
    DECLARE NUM BOOL;
    DECLARE d INT DEFAULT 0;  
    DECLARE ID INTEGER;
    DECLARE Get_cur CURSOR FOR SELECT USER_ID FROM SYMPTOMS;  
    DECLARE CONTINUE HANDLER FOR SQLSTATE '02000'  
    SET d = 1;  
    DECLARE CONTINUE HANDLER FOR SQLSTATE '23000'  
    SET d = 1;  
    
    OPEN Get_cur;  
    lbl: LOOP  
        IF d = 1 THEN  
        LEAVE lbl;  
        END IF;  
        IF NOT d = 1 THEN 
        FETCH Get_cur INTO ID;  
        SET NUM = update_symp(ID);
        END IF;  
    END LOOP;  
    
    CLOSE Get_cur; 
END //
DELIMITER ; 

DELIMITER // 
CREATE OR REPLACE TRIGGER UPDATE_ALL
AFTER UPDATE ON SYMPTOMS
FOR EACH ROW
BEGIN
    DECLARE NUM BOOL;
    DECLARE d INT DEFAULT 0;  
    DECLARE ID INTEGER;
    DECLARE Get_cur CURSOR FOR SELECT USER_ID FROM SYMPTOMS;  
    DECLARE CONTINUE HANDLER FOR SQLSTATE '02000'  
    SET d = 1;  
    DECLARE CONTINUE HANDLER FOR SQLSTATE '23000'  
    SET d = 1;  
    
    OPEN Get_cur;  
    lbl: LOOP  
        IF d = 1 THEN  
        LEAVE lbl;  
        END IF;  
        IF NOT d = 1 THEN 
        FETCH Get_cur INTO ID;  
        SET NUM = update_symp(ID);
        END IF;  
    END LOOP;  
    
    CLOSE Get_cur; 
END //
DELIMITER ; 